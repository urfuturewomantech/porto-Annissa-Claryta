# -*- coding: utf-8 -*-
"""Dashbord.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q4a0YgEq9phdHEMWGcbkhA_hGXxkdZoq
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
from babel.numbers import format_currency
sns.set(style='dark')
st.set_option('deprecation.showPyplotGlobalUse',False)


all_df = pd.read_csv("all_data.csv")

def durasi_pengiriman_state():
    df_krm_state = all_df.groupby(['seller_state', 'customer_state'])['lama_pengiriman_hari'].mean().sort_values(ascending=False).reset_index()

    cmap = sns.cubehelix_palette(start=.2, rot=-.75, as_cmap=True)

    plt.scatter(df_krm_state['seller_state'], df_krm_state['customer_state'], c=df_krm_state['lama_pengiriman_hari'], cmap=cmap, s=100)
    plt.xlabel('State Penjual')
    plt.ylabel('State Pembeli')

    plt.colorbar(label='Durasi dari Pengiriman (dalam hari)')
    st.pyplot()  # Use st.pyplot() instead of plt.show()

    Q1 = (df_krm_state['lama_pengiriman_hari']).quantile(0.25)
    Q3 = (df_krm_state['lama_pengiriman_hari']).quantile(0.75)
    IQR = Q3 - Q1

    maximum = Q3 + (1.5*IQR)
    maximum

def durasi_pengiriman_city():
    df_krm_city = all_df.groupby(['seller_city', 'customer_city'])['lama_pengiriman_hari'].mean().sort_values(ascending=False).reset_index()
    sns.set(style="darkgrid")  # Adjust style for the plot

    sns.boxplot(x=df_krm_city['lama_pengiriman_hari'])
    st.pyplot()  # Use st.pyplot() instead of plt.show()

    Q1 = (df_krm_city['lama_pengiriman_hari']).quantile(0.25)
    Q3 = (df_krm_city['lama_pengiriman_hari']).quantile(0.75)
    IQR = Q3 - Q1

    maximum = Q3 + (1.5*IQR)
    maximum

def tipe_transaksi():
    plt.figure(figsize=(10, 5))

    clr = ["#FFC0CB", "#808080", "#808080", "#808080"]

    sns.barplot(
        x="payment_type",
        y="payment_value",
        data=all_df.sort_values(by="payment_value", ascending=False),
        palette=clr
    )
    plt.title("Distribusi dari Pembelian atas Bagian Hari", loc="center", fontsize=15)
    plt.ylabel("Nominal Transaksi")
    plt.xlabel(None)
    plt.tick_params(axis='x', labelsize=12)
    st.pyplot()  # Use st.pyplot() instead of plt.show()

def penjualan_tertinggi():
    df_tgl = all_df.groupby(by=["month","year"]).order_id.nunique().reset_index()
    df_tgl["month"] = pd.to_datetime(df_tgl["month"], format='%m-%Y')

    plt.figure(figsize=(25, 9))

    ax = sns.lineplot(x='month', y='order_id', data=df_tgl, estimator=None, linewidth=3)
    ax.set(xticks=df_tgl.month.values)

    plt.title("Tren Pertumbuhan atas Penjualan", loc="center", fontsize=18)
    plt.ylabel("Total dari Order")
    plt.xlabel(None)
    ax.grid(False)
    for tick in ax.get_xticklabels():
        tick.set_rotation(45)

    st.pyplot()  # Use st.pyplot() instead of plt.show()

st.header('Dicoding Collection Dashboard :sparkles:')

# Assuming you have defined 'bycity_df' and 'bystate_df' DataFrames before this code block
# Assuming 'st' is the Streamlit module

st.subheader("Durasi Pengiriman State")
durasi_pengiriman_state()

st.subheader("Durasi Pengiriman City")
durasi_pengiriman_city()

st.subheader("Tipe Transaksi")
tipe_transaksi()

st.subheader("Penjualan Tertinggi")
penjualan_tertinggi()

st.subheader("Kesimpulan")
st.subheader("Berapa durasi terlama untuk pengiriman state? 27 Hari")
st.subheader("Berapa durasi terlama untuk pengiriman City? 27 Hari")
st.subheader("Kapan penjualan tertinggi? Dari diagram tersebut diketahui pembelian terbanyak terjadi pada bulan November di tahun 2017, khususnya di tanggal 24 November tahun 2017.")
st.subheader("Metode pembayaran apa yang sering digunakan? Kartu Kredit")

